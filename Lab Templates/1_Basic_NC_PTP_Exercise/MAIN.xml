<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="Beckhoff Automation GmbH" productName="TwinCAT PLC Control" productVersion="3.5.13.21" creationDateTime="2023-10-09T13:51:54.8616939" />
  <contentHeader name="PLC1" modificationDateTime="2023-10-09T13:51:54.8616939">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation />
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes />
    <pous>
      <pou name="MAIN" pouType="program">
        <interface>
          <localVars>
            <variable name="nState">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> State of the state machine</xhtml>
              </documentation>
            </variable>
            <variable name="bStart">
              <type>
                <BOOL />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Control Variables</xhtml>
              </documentation>
            </variable>
            <variable name="bHalt">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Axis">
              <type>
                <array>
                  <dimension lower="1" upper="3" />
                  <baseType>
                    <derived name="Axis_Ref" />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Axis Control Ref</xhtml>
              </documentation>
            </variable>
            <variable name="mcPower">
              <type>
                <array>
                  <dimension lower="1" upper="3" />
                  <baseType>
                    <derived name="MC_Power" />
                  </baseType>
                </array>
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Axis Power Block</xhtml>
              </documentation>
            </variable>
            <variable name="mcMoveAbs">
              <type>
                <derived name="MC_MoveAbsolute" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Axis Move Absolute Block</xhtml>
              </documentation>
            </variable>
            <variable name="fPosition">
              <type>
                <LREAL />
              </type>
              <initialValue>
                <simpleValue value="5000.0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Absolute Position</xhtml>
              </documentation>
            </variable>
            <variable name="mcGearIn">
              <type>
                <derived name="MC_GearIn" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Gear-In Function Block</xhtml>
              </documentation>
            </variable>
            <variable name="mcExtSpEnable">
              <type>
                <derived name="MC_ExtSetPointGenEnable" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> External Setpoint Gen Enable</xhtml>
              </documentation>
            </variable>
            <variable name="nDirection">
              <type>
                <DINT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Gen Feed Direction</xhtml>
              </documentation>
            </variable>
            <variable name="I_itr">
              <type>
                <INT />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Loop Iterator</xhtml>
              </documentation>
            </variable>
            <variable name="Random">
              <type>
                <derived name="DRAND" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Random Position</xhtml>
              </documentation>
            </variable>
            <variable name="Dwell">
              <type>
                <derived name="TON" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> Dwell Timer</xhtml>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <actions>
          <action name="Step_1_Reversing_Sequence">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
CASE nState OF
		50: 
		(*
		** Exercise 1 - Execute an absolute move on Axis 1 and wait here until done
		*)
		// Execute move to Position A
		mcMoveAbs(Axis:= Axis[1], Execute:= TRUE, Position:= fPosition, Velocity := 1000, Acceleration := 2000, Deceleration := 2000, Jerk := 5000);
		// Check if move is complete
		IF mcMoveAbs.Done THEN
			mcMoveAbs(Axis:= Axis[1], Execute:= FALSE);
			nState := nState + 10;
		END_IF
		
	60: (*
		** Exercise 1 - Call a dwell timer, wait here until time is elapsed
		*)	
		Dwell(IN:= TRUE, PT:= T#1S);
		IF Dwell.Q THEN
			Dwell(IN:= FALSE, PT:= T#1S);
			nState := nState + 10;
		END_IF
		
		
	70: (*
		** Exercise 1 - Check what position was last issued, and command a new one
		*)				  
		Random(Seed:= 1, Num=&gt; fPosition);
		IF Axis[1].NcToPlc.ActPos &gt; 0 THEN
			fPosition := fPosition * -5000.0;
		ELSE
			fPosition := fPosition * 5000.0;
		END_IF	
		nState := nState + 30;
END_CASE
*)

// Comment me out
nState := nState + 50;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>d7798991-c5d2-4359-846d-482a4af24842</ObjectId>
              </data>
            </addData>
          </action>
          <action name="Step_2_GearIn">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
mcGearIn(Master:= Axis[1], Slave:= Axis[2], Execute:= TRUE, RatioNumerator:= 0.5, RatioDenominator:= 1);
IF mcGearIn.InGear THEN
	mcGearIn(Master:= Axis[1], Slave:= Axis[2], Execute:= FALSE, RatioNumerator:= 0.5, RatioDenominator:= 1);
	nState := nState + 10;
END_IF
*)

// Comment me out
nState := nState + 10;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>a7e2c9e7-9d2f-4977-b9ee-f15b098dc77b</ObjectId>
              </data>
            </addData>
          </action>
          <action name="Step_3_ExternalSetpoint">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
mcExtSpEnable(Axis:= Axis[3], Execute:= TRUE, Position:= 0, PositionType:= POSITIONTYPE_ABSOLUTE);
IF mcExtSpEnable.Done THEN
	mcExtSpEnable(Axis:= Axis[3], Execute:= FALSE, Position:= 0, PositionType:= POSITIONTYPE_ABSOLUTE);
	nState := nState + 10;
END_IF
*)

// Comment me out
nState := nState + 10;</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>4b2a7c73-9b2a-4dfb-a773-1a2ebf8ecefb</ObjectId>
              </data>
            </addData>
          </action>
          <action name="Step_3_ExternalSetpointCalc">
            <body>
              <ST>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
// Read the status of Axis 1
Axis[1].ReadStatus();

// Read the direction of Axis 1 and map it to Axis 3
IF Axis[1].Status.PositiveDirection THEN
	nDirection := 1;
ELSIF Axis[1].Status.NegativeDirection THEN
	nDirection := -1;
ELSE
	nDirection := 0;
END_IF

// Call the Setpoint Feed
MC_ExtSetPointGenFeed(Position:= Axis[1].NcToPlc.ActPos*0.25, 
						Velocity:= Axis[1].NcToPlc.ActVelo*0.25, 
						Acceleration:= Axis[1].NcToPlc.ActAcc*0.25, 
						Direction:= nDirection, 
						Axis:= Axis[3]);
*)</xhtml>
              </ST>
            </body>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>78ffd40e-5176-45b7-86ac-3f8d5e991583</ObjectId>
              </data>
            </addData>
          </action>
        </actions>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">// Simple NC State Machine
CASE nState OF
	0:	// Start the state machine
		IF bStart THEN
			bStart := FALSE;
			nState := nState + 10;
		END_IF

	10: // Power on the axis
		FOR I_itr := 1 TO 3 DO
			mcPower[I_itr](Axis := Axis[I_itr], Enable := TRUE, Enable_Positive := TRUE, Enable_Negative := TRUE, Override := 100.0);
		END_FOR
		nState := nState + 10;
	
	20: // Check all axis are enabled
		FOR I_itr := 1 TO 3 DO
			// Check if motor is enabled
			IF NOT mcPower[I_itr].Status THEN
				// Return to power state, or reset state if you have one
				// At the end of this state we add 10, so to return to 10 we need to subtract 20
				nState := nState - 20;
				EXIT;
			END_IF
		END_FOR
		nState := nState + 10;

	30: (*
		**	Exercise 2 - Gear-In Axis 2 to Axis 1
		*)
		Step_2_GearIn();
		 
	40: (*
		**	Exercise 3 - Enable External Setpoint Generator for Axis 3
		*)
		Step_3_ExternalSetpoint();

	
	50..70: 
		(*
		** Exercise 1 - Execute an absolute move on Axis 1 and wait here until done
		*)
		Step_1_Reversing_Sequence();

	100:
		// Check if continuous loop, or return to 0
		IF bHalt THEN
			bHalt := TRUE;
			nState := 0;
		ELSE
			nState := nState - 50;
		END_IF
END_CASE
(* 
** Exercise 3 - External Setpoint Generator Feed 
*)
Step_3_ExternalSetpointCalc();

</xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/interfaceasplaintext" handleUnknown="implementation">
            <InterfaceAsPlainText>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">PROGRAM MAIN
VAR
	// State of the state machine
	nState 			: INT;
	// Control Variables
	bStart, bHalt 	: BOOL;
	

	// Axis Control Ref
	Axis			: ARRAY[1..3] OF Axis_Ref;
	// Axis Power Block
	mcPower 		: ARRAY[1..3] OF MC_Power;
	// Axis Move Absolute Block
	mcMoveAbs 		: MC_MoveAbsolute;
	// Absolute Position
	fPosition 		: LREAL := 5000.0;
	// Gear-In Function Block
	mcGearIn 		: MC_GearIn;
	// External Setpoint Gen Enable
	mcExtSpEnable 	: MC_ExtSetPointGenEnable;
	// Gen Feed Direction
	nDirection		: DINT;

	
	// Loop Iterator
	I_itr			: INT;
	// Random Position
	Random			: DRAND;
	// Dwell Timer
	Dwell 			: TON;
END_VAR

</xhtml>
            </InterfaceAsPlainText>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>42e41504-19b0-4be3-aee2-d44241402398</ObjectId>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations />
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="MAIN" ObjectId="42e41504-19b0-4be3-aee2-d44241402398">
          <Object Name="Step_1_Reversing_Sequence" ObjectId="d7798991-c5d2-4359-846d-482a4af24842" />
          <Object Name="Step_2_GearIn" ObjectId="a7e2c9e7-9d2f-4977-b9ee-f15b098dc77b" />
          <Object Name="Step_3_ExternalSetpoint" ObjectId="4b2a7c73-9b2a-4dfb-a773-1a2ebf8ecefb" />
          <Object Name="Step_3_ExternalSetpointCalc" ObjectId="78ffd40e-5176-45b7-86ac-3f8d5e991583" />
        </Object>
      </ProjectStructure>
    </data>
  </addData>
</project>